!function(){"use strict";const e=new Set;chrome.runtime.onConnect.addListener((n=>{try{e.add(n),n.onDisconnect.addListener((()=>{e.delete(n)}))}catch(t){console.error("Error handling port connection:",t)}})),chrome.commands.onCommand.addListener((async e=>{try{if("toggle-panel"===e){const[e]=await chrome.tabs.query({active:!0,currentWindow:!0});if(!e?.id)return void console.warn("No active tab found");await async function(e){try{await chrome.scripting.executeScript({target:{tabId:e},func:()=>window.hasOwnProperty("ChromeAIContent")})}catch(n){await chrome.scripting.executeScript({target:{tabId:e},files:["content.js"]}),await new Promise((e=>setTimeout(e,100)))}}(e.id),await chrome.tabs.sendMessage(e.id,{command:"toggle-panel"}).catch((e=>{console.error("Error sending toggle message:",e)}))}}catch(n){console.error("Error handling command:",n)}})),chrome.runtime.onSuspend.addListener((()=>{try{e.clear()}catch(n){console.error("Error during cleanup:",n)}}))}();
//# sourceMappingURL=background.js.map
